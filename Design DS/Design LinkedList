https://leetcode.com/problems/design-linked-list/description/

struct LLNode
{
    int data;
    LLNode* next;
    LLNode(int x)
    {
        data = x;
        next = NULL;
    }
};
class MyLinkedList {
public:
    LLNode*head = new LLNode(-1);
    int size = 0;
    MyLinkedList() {
        
    }
    
    int get(int index) {
        if(index >= size)
        return -1;
        LLNode* curr = head->next;
        for(int i=0;i<index;i++)
        {
            curr = curr->next;
        }
        return curr->data;
    }
    
    void addAtHead(int val) {
        LLNode* nn = new LLNode(val);
        nn->next = head->next;
        head->next = nn;
        size++;
    }
    
    void addAtTail(int val) {
        LLNode* nn = new LLNode(val);
        LLNode* curr = head;
        while(curr->next!=NULL)
        {
            curr = curr->next;
        }
        curr->next=nn;
        size++;
    }
    
    void addAtIndex(int index, int val) {
        if(index>size)
         return;
        LLNode* nn = new LLNode(val);
        LLNode* curr = head;
        for(int i=0;i<index;i++)
        {
            curr = curr->next;
        }
        nn->next = curr->next;
        curr->next=nn;
        size++;
    }
    
    void deleteAtIndex(int index) {
        if(index>=size)
         return;
        LLNode* curr = head;
        for(int i=0;i<index;i++)
        {
            curr = curr->next;
        }
        LLNode* toDelete = curr->next;
        curr->next = toDelete->next; 
        delete toDelete;  
        size--;
    }
};
